{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "OpenShift Service Mesh 1",
      "fix_state": "Will not fix",
      "package_name": "servicemesh-proxy",
      "cpe": "cpe:/a:redhat:service_mesh:1"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2020-07-11T00:00:00Z",
  "bugzilla": {
    "description": "CVE-2020-15890 luajit: out-of-bounds read because __gc handler frame traversal is mishandled",
    "id": "1860324",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1860324"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "7.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "CWE-125",
  "statement": "OpenShift ServiceMesh proxy does package a vulnerable version of luajit. The segmentation fault is triggered via creating a inline code rule in the envoy filter, however envoy can also be caused to exit via a code rule which is also not syntactically correct either. A user who has permissions to change the filter rule can have the same affect regardless, hence this issue will not be addressed at this time and might be fixed in a future release.",
  "acknowledgement": "",
  "name": "CVE-2020-15890",
  "document_distribution": "",
  "details": [
    "LuaJit through 2.1.0-beta3 has an out-of-bounds read because __gc handler frame traversal is mishandled."
  ],
  "references": null
}