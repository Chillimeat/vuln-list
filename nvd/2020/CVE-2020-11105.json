{
  "configurations": {
    "CVE_data_version": "4.0",
    "nodes": []
  },
  "cve": {
    "CVE_data_meta": {
      "ASSIGNER": "cve@mitre.org",
      "ID": "CVE-2020-11105"
    },
    "affects": {
      "vendor": {
        "vendor_data": []
      }
    },
    "data_format": "MITRE",
    "data_type": "CVE",
    "data_version": "4.0",
    "description": {
      "description_data": [
        {
          "lang": "en",
          "value": "An issue was discovered in USC iLab cereal through 1.3.0. It employs caching of std::shared_ptr values, using the raw pointer address as a unique identifier. This becomes problematic if an std::shared_ptr variable goes out of scope and is freed, and a new std::shared_ptr is allocated at the same address. Serialization fidelity thereby becomes dependent upon memory layout. In short, serialized std::shared_ptr variables cannot always be expected to serialize back into their original values. This can have any number of consequences, depending on the context within which this manifests."
        }
      ]
    },
    "problemtype": {
      "problemtype_data": [
        {
          "description": []
        }
      ]
    },
    "references": {
      "reference_data": [
        {
          "name": "https://github.com/USCiLab/cereal/issues/636",
          "refsource": "MISC",
          "tags": [],
          "url": "https://github.com/USCiLab/cereal/issues/636"
        }
      ]
    }
  },
  "impact": {},
  "lastModifiedDate": "2020-03-30T23:06Z",
  "publishedDate": "2020-03-30T22:15Z"
}