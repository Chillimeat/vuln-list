{
  "Severity": "HIGH",
  "UpdatedAt": "2020-06-04T18:32:31Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "django"
  },
  "Advisory": {
    "DatabaseId": 2139,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTNnaDIteHc3NC1qbWN3",
    "GhsaId": "GHSA-3gh2-xw74-jmcw",
    "References": [
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2020-9402"
      },
      {
        "Url": "https://github.com/advisories/GHSA-3gh2-xw74-jmcw"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-3gh2-xw74-jmcw"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2020-9402"
      }
    ],
    "Description": "Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2020-06-05T14:52:07Z",
    "Severity": "HIGH",
    "Summary": "SQL injection in Django",
    "UpdatedAt": "2020-06-05T14:52:07Z",
    "WithdrawnAt": ""
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "3.0.4"
      },
      "VulnerableVersionRange": "\u003e= 3.0.0, \u003c 3.0.4"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "2.2.11"
      },
      "VulnerableVersionRange": "\u003e= 2.0.0, \u003c 2.2.11"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "1.11.29"
      },
      "VulnerableVersionRange": "\u003c 1.11.29"
    }
  ]
}