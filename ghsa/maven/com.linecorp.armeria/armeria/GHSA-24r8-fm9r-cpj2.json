{
  "Severity": "LOW",
  "UpdatedAt": "2019-12-05T18:40:31Z",
  "Package": {
    "Ecosystem": "MAVEN",
    "Name": "com.linecorp.armeria:armeria"
  },
  "Advisory": {
    "DatabaseId": 1830,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTI0cjgtZm05ci1jcGoy",
    "GhsaId": "GHSA-24r8-fm9r-cpj2",
    "References": [
      {
        "Url": "https://github.com/line/armeria/security/advisories/GHSA-24r8-fm9r-cpj2"
      },
      {
        "Url": "https://github.com/advisories/GHSA-24r8-fm9r-cpj2"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-24r8-fm9r-cpj2"
      }
    ],
    "Description": "## Multiple timing attack vulnerabilities leading to the recovery of secrets based on the use of non-constant time compare function\r\n\r\n### Impact\r\n\r\nString comparison method in multiple authentication validation in Armeria were known to be vulnerable to timing attacks. This vulnerability is caused by the insecure implementation of `equals` method from `java.lang.String`. While this attack is not practically possible, an attacker still has a potential to attack if the victim's server validates user by using `equals` method.\r\n\r\nWe would like to thank @chrsow for pointing out the issue.\r\n\r\n## Potentially vulnerable codes\r\n\r\nhttps://github.com/line/armeria/blob/f0d870fde1088114070be31b67f7df0a21e835c6/core/src/main/java/com/linecorp/armeria/server/auth/OAuth2Token.java#L54\r\nhttps://github.com/line/armeria/blob/f0d870fde1088114070be31b67f7df0a21e835c6/core/src/main/java/com/linecorp/armeria/server/auth/BasicToken.java#L64\r\n\r\n### Patches\r\n\r\nThere are two options to patch this issue.\r\n\r\n1. Remove `equals` method; it has been exclusively used for test cases and was never used in any OSS projects that are using Armeria. (But it is worth noting that there are possibilities of closed projects authenticating users by utilizing `equals` method)\r\n\r\n2. Use `MessageDigest.isEqual` to compare the credential instead.\r\n\r\n### Workarounds\r\n\r\n1. Update to the latest version (TBD)\r\n\r\n2-1. Users can prevent these vulnerabilities by modifying and implementing timing attack preventions by themselves.\r\n\r\n2-2. Precisely speaking, it is possible to compare credentials by securely comparing them after calling methods to directly return the input (namely `Object. accessToken()`, `Object.username()` and `Object.password()`).\r\n\r\n### References\r\n- https://cwe.mitre.org/data/definitions/208.html\r\n- https://security.stackexchange.com/questions/111040/should-i-worry-about-remote-timing-attacks-on-string-comparison\r\n\r\n### Side Note\r\n\r\nSince it is a theoretical attack, there is no PoC available from neither the vendor nor the security team.\r\n\r\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2019-12-05T18:40:51Z",
    "Severity": "LOW",
    "Summary": "Low severity vulnerability that affects com.linecorp.armeria:armeria",
    "UpdatedAt": "2020-06-17T15:53:59Z",
    "WithdrawnAt": ""
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.97.0"
      },
      "VulnerableVersionRange": "\u003c 0.97.0"
    }
  ]
}