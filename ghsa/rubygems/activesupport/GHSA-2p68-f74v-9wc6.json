{
  "Severity": "HIGH",
  "UpdatedAt": "2020-05-26T14:47:04Z",
  "Package": {
    "Ecosystem": "RUBYGEMS",
    "Name": "activesupport"
  },
  "Advisory": {
    "DatabaseId": 2116,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTJwNjgtZjc0di05d2M2",
    "GhsaId": "GHSA-2p68-f74v-9wc6",
    "References": [
      {
        "Url": "https://weblog.rubyonrails.org/2020/5/18/Rails-5-2-4-3-and-6-0-3-1-have-been-released/"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2020-8165"
      },
      {
        "Url": "https://github.com/advisories/GHSA-2p68-f74v-9wc6"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-2p68-f74v-9wc6"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2020-8165"
      }
    ],
    "Description": "In ActiveSupport, there is potentially unexpected behaviour in the MemCacheStore and RedisCacheStore where, when\r\nuntrusted user input is written to the cache store using the `raw: true` parameter, re-reading the result\r\nfrom the cache can evaluate the user input as a Marshalled object instead of plain text. Vulnerable code looks like:\r\n\r\n```\r\ndata = cache.fetch(\"demo\", raw: true) { untrusted_string }\r\n```\r\n  \r\nImpact\r\n------\r\nUnmarshalling of untrusted user input can have impact up to and including RCE. At a minimum,\r\nthis vulnerability allows an attacker to inject untrusted Ruby objects into a web application.\r\nIn addition to upgrading to the latest versions of Rails, developers should ensure that whenever\r\nthey are calling `Rails.cache.fetch` they are using consistent values of the `raw` parameter for both\r\nreading and writing, especially in the case of the RedisCacheStore which does not, prior to these changes,\r\ndetect if data was serialized using the raw option upon deserialization.\r\n\r\nWorkarounds\r\n-----------\r\nIt is recommended that application developers apply the suggested patch or upgrade to the latest release as\r\nsoon as possible. If this is not possible, we recommend ensuring that all user-provided strings cached using\r\nthe `raw` argument should be double-checked to ensure that they conform to the expected format.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2020-05-26T14:49:24Z",
    "Severity": "HIGH",
    "Summary": "Unintended unmarshalling in ActiveSupport",
    "UpdatedAt": "2020-05-26T15:08:41Z",
    "WithdrawnAt": ""
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "6.0.3.1"
      },
      "VulnerableVersionRange": "\u003e= 6.0.0, \u003c= 6.0.3"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "5.2.4.3"
      },
      "VulnerableVersionRange": "\u003e= 5.0.0, \u003c= 5.2.4.2"
    }
  ]
}