{
  "Severity": "MODERATE",
  "UpdatedAt": "2020-06-26T16:54:03Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "jsrsasign"
  },
  "Advisory": {
    "DatabaseId": 2201,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLXA4YzMtN3JqOC1xOTYz",
    "GhsaId": "GHSA-p8c3-7rj8-q963",
    "References": [
      {
        "Url": "https://github.com/kjur/jsrsasign/security/advisories/GHSA-p8c3-7rj8-q963"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2020-14966"
      },
      {
        "Url": "https://github.com/advisories/GHSA-p8c3-7rj8-q963"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-p8c3-7rj8-q963"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2020-14966"
      }
    ],
    "Description": "### Impact\nJsrsasign supports ECDSA signature validation which signature value is represented by ASN.1 DER encoding. This vulnerablity may accept a wrong ASN.1 DER encoded ECDSA signature such as:\n\n- wrong multi-byte ASN.1 length of TLV (ex. 0x820045 even though 0x45 is correct)\n- prepending zeros with ASN.1 INTEGER value (ex. 0x00000123 even though 0x0123 is correct)\n- appending zeros to signature of ASN.1 TLV (ex. 0x3082....1fbc000000 even though 0x3082....1fbc, appending zeros are ignored.)\n\nThis vulnerability was fixed by strict ASN.1 DER checking. \n\nHere is an assessment of this vulnerability:\n\n- If you are not use ECDSA signature validation, this vulnerability is not affected.\n- Not ASN.1 format signature like just concatenation of R and S value is not affected such as Bitcoin.\n- This vulnerability is affected to all ECC curve parameters.\n- Risk to accept a forged or crafted message to be signed is low.\n- Risk to raise memory corruption is low since jsrsasign uses BigInteger class.\n- ECDSA signatures semantically the same to valid one may be accepted as valid. There are many malleable variants.\n\nAs discussed [here](https://crypto.stackexchange.com/questions/24862/ber-or-der-x9-62-for-ecdsa-signature), there is no standards like X9.62 which requires ASN.1 DER. So ASN.1 BER can be applied to ECDSA however most of implementations like OpenSSL do strict ASN.1 DER checking.\n\n### Patches\nUsers using ECDSA signature validation should upgrade to 8.0.19.\n\n### Workarounds\nDo strict ASN.1 DER checking for ASN.1 encoded ECDSA signature value.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2020-06-26T16:54:15Z",
    "Severity": "MODERATE",
    "Summary": "ECDSA signature validation vulnerability by accepting wrong ASN.1 encoding in jsrsasign",
    "UpdatedAt": "2020-06-26T16:54:15Z",
    "WithdrawnAt": ""
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "8.0.19"
      },
      "VulnerableVersionRange": "\u003e= 4.0.0, \u003c 8.0.19"
    }
  ]
}